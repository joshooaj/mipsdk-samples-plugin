//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TransactConnector {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TransactConnector.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dummy property - not used.
        /// </summary>
        internal static string DummyProperty {
            get {
                return ResourceManager.GetString("DummyProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extra transaction line.
        /// </summary>
        internal static string ExtraLine {
            get {
                return ResourceManager.GetString("ExtraLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Write a line that is to be added to all transactions.
        /// </summary>
        internal static string ExtraLineTooltip {
            get {
                return ResourceManager.GetString("ExtraLineTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password must contain both letters and numbers..
        /// </summary>
        internal static string InvalidPassword {
            get {
                return ResourceManager.GetString("InvalidPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid URI..
        /// </summary>
        internal static string InvalidURI {
            get {
                return ResourceManager.GetString("InvalidURI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option 1.
        /// </summary>
        internal static string Option1 {
            get {
                return ResourceManager.GetString("Option1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option 2.
        /// </summary>
        internal static string Option2 {
            get {
                return ResourceManager.GetString("Option2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option 3.
        /// </summary>
        internal static string Option3 {
            get {
                return ResourceManager.GetString("Option3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test flag.
        /// </summary>
        internal static string TestFlag {
            get {
                return ResourceManager.GetString("TestFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test number.
        /// </summary>
        internal static string TestNumber {
            get {
                return ResourceManager.GetString("TestNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test options.
        /// </summary>
        internal static string TestOptions {
            get {
                return ResourceManager.GetString("TestOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test password.
        /// </summary>
        internal static string TestPassword {
            get {
                return ResourceManager.GetString("TestPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test URI.
        /// </summary>
        internal static string TestURI {
            get {
                return ResourceManager.GetString("TestURI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timestamp offset.
        /// </summary>
        internal static string TimestampOffset {
            get {
                return ResourceManager.GetString("TimestampOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use timestamp offset.
        /// </summary>
        internal static string TimestampOffsetToggle {
            get {
                return ResourceManager.GetString("TimestampOffsetToggle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this is set, an offset will be added to the timestamps.
        /// </summary>
        internal static string TimestampOffsetToggleTooltip {
            get {
                return ResourceManager.GetString("TimestampOffsetToggleTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the offset used for timestamping measured in seconds. It can be positive (in the future) or negative (in the past).
        /// </summary>
        internal static string TimestampOffsetTooltip {
            get {
                return ResourceManager.GetString("TimestampOffsetTooltip", resourceCulture);
            }
        }
    }
}
